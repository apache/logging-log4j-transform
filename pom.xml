<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements. See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!-- ██     ██  █████  ██████  ███    ██ ██ ███    ██  ██████  ██
       ██     ██ ██   ██ ██   ██ ████   ██ ██ ████   ██ ██       ██
       ██  █  ██ ███████ ██████  ██ ██  ██ ██ ██ ██  ██ ██   ███ ██
       ██ ███ ██ ██   ██ ██   ██ ██  ██ ██ ██ ██  ██ ██ ██    ██
        ███ ███  ██   ██ ██   ██ ██   ████ ██ ██   ████  ██████  ██

       `log4j-transform` project modules should use `log4j-transform-parent` as their parents, not this POM!
       This POM constitutes the BOM to be imported by applications using `log4j-transform` project modules. -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.logging</groupId>
    <artifactId>logging-parent</artifactId>
    <version>7</version>
  </parent>
  <groupId>org.apache.logging.log4j</groupId>
  <artifactId>log4j-transform-bom</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <url>https://github.com/apache/logging-log4j-transform</url>
  <inceptionYear>2022</inceptionYear>
  <organization>
    <name>Apache Software Foundation</name>
    <url>https://apache.org</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>rgoers</id>
      <name>Ralph Goers</name>
      <email>rgoers@apache.org</email>
      <organization>Nextiva</organization>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>America/Phoenix</timezone>
    </developer>
    <developer>
      <id>ggregory</id>
      <name>Gary Gregory</name>
      <email>ggregory@apache.org</email>
      <url>https://www.garygregory.com</url>
      <organization>The Apache Software Foundation</organization>
      <organizationUrl>https://www.apache.org/</organizationUrl>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>America/New_York</timezone>
      <properties>
        <picUrl>https://people.apache.org/~ggregory/img/garydgregory80.png</picUrl>
      </properties>
    </developer>
    <developer>
      <id>pkarwasz</id>
      <name>Piotr P. Karwasz</name>
      <email>pkarwasz@apache.org</email>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>Europe/Warsaw</timezone>
    </developer>
    <developer>
      <id>ckozak</id>
      <name>Carter Kozak</name>
      <email>ckozak@apache.org</email>
      <url>https://github.com/carterkozak</url>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>America/New York</timezone>
      <properties>
        <picUrl>https://www.gravatar.com/avatar/e057b8f2538a0258f451d9efc8d2f6fa.jpg</picUrl>
      </properties>
    </developer>
    <developer>
      <id>rpopma</id>
      <name>Remko Popma</name>
      <email>rpopma@apache.org</email>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>Asia/Tokyo</timezone>
      <properties>
        <picUrl>https://people.apache.org/~rpopma/img/profilepic.jpg</picUrl>
      </properties>
    </developer>
    <developer>
      <id>mattsicker</id>
      <name>Matt Sicker</name>
      <email>mattsicker@apache.org</email>
      <organization>Apple</organization>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>America/Chicago</timezone>
    </developer>
    <developer>
      <id>vy</id>
      <name>Volkan Yazıcı</name>
      <email>vy@apache.org</email>
      <roles>
        <role>PMC Member</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
  </developers>
  <modules>
    <!-- the parent POM must come first: -->
    <module>log4j-transform-parent</module>
    <module>log4j-transform-maven-plugin</module>
    <module>log4j-weaver</module>
    <module>log4j-transform-maven-shade-plugin-extensions</module>
  </modules>
  <scm>
    <connection>scm:git:git@github.com:apache/logging-log4j-transform.git</connection>
    <developerConnection>scm:git:git@github.com:apache/logging-log4j-transform.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/apache/logging-log4j-transform</url>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/apache/logging-log4j-transform/issues</url>
  </issueManagement>
  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/apache/logging-log4j-transform/actions</url>
  </ciManagement>
  <distributionManagement>
    <!-- `repository` from parent `org.apache.logging:logging-parent` (id: `apache.releases.https`) -->
    <!-- `snapshotRepository` from parent `org.apache.logging:logging-parent` (id: `apache.snapshots.https`) -->
  </distributionManagement>
  <properties>
    <!-- project version -->
    <revision>0.1.0-SNAPSHOT</revision>
    <!-- `minimalJavaBuildVersion` is employed by `org.apache:apache`,
      which is the parent of `org.apache.logging:logging-parent`, which is the parent of us.
        `minimalJavaBuildVersion` is used for enforcing the compiler version.
        We will use `java.version` to enforce the target JVM byte code, which is
        8. -->
    <minimalJavaBuildVersion>[11,12)</minimalJavaBuildVersion>
    <java.version>8</java.version>
    <!-- `project.build.outputTimestamp` is required for reproducible builds: https://maven.apache.org/guides/mini/guide-reproducible-builds.html -->
    <project.build.outputTimestamp>0</project.build.outputTimestamp>
    <!-- plugin versions -->
    <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
    <sign-maven-plugin.version>1.0.1</sign-maven-plugin.version>
    <spotless-maven-plugin.version>2.33.0</spotless-maven-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-transform-maven-plugin</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-weaver</artifactId>
        <version>${revision}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <!-- Setting `outputDirectory` to `project.build.directory`, which is cleaned by `default-clean` execution of `clean:clean`.
                 This makes `flatten:clean` redundant. -->
            <outputDirectory>${project.build.directory}</outputDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- BOMs should ideally _only_ contain dependencies for modules of the project.
           No invasive properties or plugin/dependency management – either from the BOM itself or its parent.
           The following `flatten-maven-plugin` exactly performs that trimming operation. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>flatten-bom</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <flattenMode>bom</flattenMode>
              <!-- POM `ElementHandling` is pretty cryptic: https://www.mojohaus.org/flatten-maven-plugin/apidocs/org/codehaus/mojo/flatten/ElementHandling.html
                   Trial-and-error has shown that we should use either `remove` or `interpolate`.
                   `remove` simply removes the element.
                   `interpolate` takes the element from the original POM with variables interpolated.
                   Avoid using `resolve`, which uses the effective POM where inherited changes from the parent are also incorporated. -->
              <pomElements>
                <properties>remove</properties>
                <repositories>remove</repositories>
                <distributionManagement>remove</distributionManagement>
                <dependencyManagement>interpolate</dependencyManagement>
              </pomElements>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <licenseHeader>
              <file>${maven.multiModuleProjectDirectory}/spotless-license-header.txt</file>
            </licenseHeader>
            <trimTrailingWhitespace/>
            <endWithNewline/>
            <removeUnusedImports/>
            <indent>
              <spaces>true</spaces>
              <spacesPerTab>4</spacesPerTab>
            </indent>
            <importOrder>
              <order>java,javax,org.apache.logging,,\#java,\#javax,\#org.apache.logging,\#</order>
            </importOrder>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <keepBlankLines>true</keepBlankLines>
              <indentSchemaLocation>true</indentSchemaLocation>
              <sortDependencies>scope,artifactId,groupId</sortDependencies>
              <sortDependencyExclusions>artifactId,groupId</sortDependencyExclusions>
              <sortPlugins>artifactId,groupId</sortPlugins>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <id>default-spotless</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <defaultGoal>deploy</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
