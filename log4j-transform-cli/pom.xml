<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-transform-parent</artifactId>
    <version>${revision}</version>
    <relativePath>../log4j-transform-parent</relativePath>
  </parent>

  <artifactId>log4j-transform-cli</artifactId>
  <name>Apache Log4j Transform CLI</name>
  <description>The Apache Log4j Transform CLI tool provides access to other Log4j Transform modules such as conversion
    between
    configuration formats and plugin descriptors.</description>

  <properties>
    <!-- Remove after first release -->
    <bnd.baseline.fail.on.missing>false</bnd.baseline.fail.on.missing>

    <!-- Dependency versions -->
    <commons-cli.version>1.9.0</commons-cli.version>

    <!-- Main class -->
    <Main-Class>org.apache.logging.log4j.transform.cli.Main</Main-Class>
  </properties>

  <dependencies>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons-cli.version}</version>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-converter-config</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <!--
        ~ SITE section
        ~
        ~ Since currently the website is built using `./mvnw install && ./mvnw site`, we need to bind these plugins
        ~ to the default lifecycle.
        ~ Plugins in the site lifecycle will be executed **after** those of the project's reactor and therefore their
        ~ result will be ignored.
        -->

      <!-- Copies the `antora.yml` file to the generated Antora directory structure -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-antora</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <outputDirectory>target/generated-site/antora</outputDirectory>
              <resources>
                <resource>
                  <directory>src/antora</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Generates the man pages for the commands -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-codegen</artifactId>
            <version>${picocli.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>generate-man-pages</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>process-classes</phase>
            <configuration>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>picocli.codegen.docgen.manpage.ManPageGenerator</mainClass>
              <arguments>
                <arg>-d</arg>
                <arg>${project.build.directory}/generated-site/antora/modules/ROOT/partials</arg>
                <arg>org.apache.logging.log4j.transform.cli.ConfigurationFileCommands</arg>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
